{
  name: "importance_sample_ggx",
  source: "
    vec3f importance_sample_ggx(vec2f Xi, float roughness, vec3f n) {
      float a = roughness * roughness;

      float phi = 2.0 * 3.14 * Xi.x;
      float cos_theta = clamp(sqrt((1.0 - Xi.y) / (1.0 + (a * a - 1.0) * Xi.y)), 0.0, 1.0);
      float sin_theta = sqrt(1.0 - cos_theta * cos_theta);

      vec3f h = vec3f(sin_theta * cos(phi), sin_theta * sin(phi), cos_theta);

      vec3f up = abs(n.z) < 0.999 ? vec3f(0.0, 0.0, 1.0) : vec3f(1.0, 0.0, 0.0);
      vec3f tangent_x = normalize(cross(n, up));
      vec3f tangent_y = cross(n, tangent_x);

      return tangent_x * h.x + tangent_y * h.y + n * h.z;
    }
  "
}
