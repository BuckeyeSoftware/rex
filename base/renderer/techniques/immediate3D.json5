{
  name: "immediate3D",
  variants: [
    "USE_STANDARD",
    "USE_POINTS"
  ],
  uniforms: [
    { name: "u_view",       type: "mat4x4f" },
    { name: "u_projection", type: "mat4x4f" }
  ],
  shaders: [
    {
      type: "vertex",
      inputs: [
        { name: "a_position",    type: "vec3f" },
        { name: "a_size",        type: "float" },
        { name: "a_color",       type: "vec4f" }
      ],
      outputs: [
        { name: "vs_color",      type: "vec4f" }
      ],
      source: "
        void main() {
          vs_color = a_color;

          vec4f eye_position = u_view * vec4(a_position, 1.0);

          rx_position = u_projection * eye_position;

        #if defined(USE_POINTS)
          float distance = length(eye_position.xyz);
          float attenuation = inversesqrt(0.1 * distance);
          rx_point_size = a_size * attenuation;
        #endif
        }
      "
    },{
      type: "fragment",
      inputs: [
        { name: "vs_color", type: "vec4f" }
      ],
      outputs: [
        { name: "fs_color", type: "vec4f" }
      ],
      source: "
        void main() {
          fs_color = vs_color;
        }
      "
    }
  ]
}