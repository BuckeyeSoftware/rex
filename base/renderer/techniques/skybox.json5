{
  name: "skybox",
  uniforms: [
    { name: "u_inverse_projection", type: "mat4x4f" },
    { name: "u_inverse_view",       type: "mat4x4f" },
    { name: "u_sampler",            type: "samplerCM", value: 0 }
  ],
  shaders: [
    {
      type: "vertex",
      imports: [
        "fullscreen_triangle"
      ],
      outputs: [
        { name: "vs_coordinate", type: "vec3f" }
      ],
      source: "
        void main() {
          vec4f triangle = fullscreen_triangle();
          vec4f position = vec4f(triangle.xy, 0.0, 1.0);
          vec4f unprojected = u_inverse_projection * position;
          vs_coordinate = (u_inverse_view * unprojected).xyz;
          rx_position = position.xyww;
        }
      "
    },{
      type: "fragment",
      inputs: [
        { name: "vs_coordinate", type: "vec3f" }
      ],
      outputs: [
        { name: "fs_color",      type: "vec4f" }
      ],
      source: "
        void main() {
          fs_color = rx_textureCM(u_sampler, vs_coordinate);
        }
      "
    }
  ]
}
